services:

  dela-worker-0:             # initial DELA leader node
    image: ghcr.io/c4dt/d-voting-dela:latest
    build:
      dockerfile: Dockerfiles/Dockerfile.dela.localhost
      context: ../
    ports:
      - "2000-2007:2000-2007"
      - "3000:3000"
      - "6000:6000"
    environment:
      PROXYKEY: ${PUBLIC_KEY}
      LLVL: info
      NODEPORT: 2000
      PROXYPORT: 2001
      HOSTNAME: localhost
    volumes:
      - dela-worker-0-data:/data

  dela-worker-1:             # DELA worker node
    image: ghcr.io/c4dt/d-voting-dela:latest
    environment:
      PROXYKEY: ${PUBLIC_KEY}
      LLVL: info
      NODEPORT: 2002
      PROXYPORT: 2003
      HOSTNAME: localhost
    network_mode: "service:dela-worker-0"
    volumes:
      - dela-worker-1-data:/data

  dela-worker-2:             # DELA worker node
    image: ghcr.io/c4dt/d-voting-dela:latest
    environment:
      PROXYKEY: ${PUBLIC_KEY}
      LLVL: info
      NODEPORT: 2004
      PROXYPORT: 2005
      HOSTNAME: localhost
    network_mode: "service:dela-worker-0"
    volumes:
      - dela-worker-2-data:/data

  dela-worker-3:             # DELA worker node
    image: ghcr.io/c4dt/d-voting-dela:latest
    environment:
      PROXYKEY: ${PUBLIC_KEY}
      LLVL: info
      NODEPORT: 2006
      PROXYPORT: 2007
      HOSTNAME: localhost
    network_mode: "service:dela-worker-0"
    volumes:
      - dela-worker-3-data:/data

  frontend:         # web service frontend
    image: ghcr.io/c4dt/d-voting-frontend:latest
    build:
      dockerfile: Dockerfiles/Dockerfile.frontend
      context: ../
    environment:
      BACKEND_HOST: ${BACKEND_HOST}
      BACKEND_PORT: ${BACKEND_PORT}
    network_mode: "service:dela-worker-0"

  backend:          # web service backend
    image: ghcr.io/c4dt/d-voting-backend:latest
    build:
      dockerfile: Dockerfiles/Dockerfile.backend
      context: ../
    environment:
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DB_PATH: /data/${DB_PATH}
      FRONT_END_URL: ${FRONT_END_URL}
      DELA_NODE_URL: ${DELA_NODE_URL}
      SESSION_SECRET: ${SESSION_SECRET}
      PUBLIC_KEY: ${PUBLIC_KEY}
      PRIVATE_KEY: ${PRIVATE_KEY}
      PORT: ${BACKEND_PORT}
    network_mode: "service:dela-worker-0"
    depends_on:
      db:
        condition: service_started
    volumes:
      - backend-data:/data

  db:               # PostgreSQL database
    image: postgres:15
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../web/backend/src/migration.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  postgres-data:    # PostgreSQL database
  dela-worker-0-data:
  dela-worker-1-data:
  dela-worker-2-data:
  dela-worker-3-data:
  dela-worker-4-data:
  backend-data:

networks:
  d-voting:
    ipam:
      config:
        - subnet: 172.19.44.0/24
          gateway: 172.19.44.1
